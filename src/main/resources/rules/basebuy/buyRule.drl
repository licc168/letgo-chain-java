package com.licc.letsgo
import com.licc.letsgo.model.Rule
import  com.licc.letsgo.services.LetsgoService
import  com.licc.letsgo.util.SpringContext
import com.licc.letsgo.res.petdetail.PetDetailData
import com.licc.letsgo.util.ResponseVo
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.licc.letsgo.model.User
dialect  "mvel"

global com.licc.letsgo.services.LetsgoService letsgoService;
global com.licc.letsgo.model.User user;
global  org.slf4j.Logger logger;



rule "级别-规则"
 salience -1
    when sale:Rule(rareDegree((float)petsOnSale.amount,sale.petsOnSale.rareDegree))
    then
      letsgoService.buy(sale.getPetsOnSale(),user);
end



rule "连续数字-规则"
 salience 1
    when sale:Rule(((float)petsOnSale.amount<islianghao(petsOnSale.id)))
    then
      letsgoService.buy(sale.getPetsOnSale(),user);
end


rule "生日-规则"
 salience 1
    when sale:Rule(brith(petsOnSale.id,(float)petsOnSale.amount,petsOnSale.rareDegree))
    then
      letsgoService.buy(sale.getPetsOnSale(),user);
end

function boolean rareDegree(float amount,int rareDegree){
boolean flag = false;
switch (rareDegree){

  case  2:   flag = amount<100?true:false;break;
  case  3:   flag = amount<1000?true:false;break;
  case  4:   flag = amount<200000?true:false;break;
  case  5:   flag = amount<2000000?true:false;break;
  case  0:   flag = amount<1?true:false;break;
  case  1:   flag = amount<1?true:false;break;

}
return  flag;

}


//生日靓号

function boolean brith(String id,float amount,int rareDegree){

     boolean flag = false;
    if(id.matches("19(82|83|84|85|86|87|88|89|90|91|92|93|94|95|96)(0[1-9]|1[0-2])(0[1-9]|((1|2)[0-9])|3[0-1])")&&
               !id.matches("\\d{4}02(29|30|31)")){

          switch (rareDegree){
              case 0:
                  flag =  amount<400?true:false; break;
              case 1:
                  flag =  amount<500?true:false;break;
              case 2:
                  flag =  amount<800?true:false;break;
              case 3:
                  flag =  amount<6000?true:false;break;
              case 4:
                  flag =  amount<200000?true:false;break;
              case 5:
                  flag =  amount<2000000?true:false;break;
              }

    }
    if(!flag&&"19891026".equals(id)||"19880118".equals(id)){
                flag =  amount<50000?true:false;
         }
  return  flag;
}







//连续数字
function  float islianghao(String id){
    if(id.matches("\\d{4}(\\d)\\1{3}")){
      return  3000;
    }
    if(id.matches("\\d{3}(\\d)\\1{4}")){
        return  10000;
    }
    if(id.matches("\\d{2}(\\d)\\1{5}")){
        return  100000;
    }
    if(id.matches("\\d{1}(\\d)\\1{6}")){
        return  1000000;
    }
    if(id.matches("(\\d)\\1{7}")){
        return  1000000;
    }

    return 1;
}






